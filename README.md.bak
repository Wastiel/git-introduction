# git-introduction

## Objetivo 
Este reposit√≥rio tem por objetivo introduzir o uso do Git para alunos iniciantes na √°rea de tecnologia, proporcionando uma abordagem simples e pr√°tica para a assimila√ß√£o desse conhecimento.

# üé® Introdu√ß√£o ao Git e GitLab  

## üìå O que √© o Git?  
O **Git** √© um sistema de controle de vers√£o distribu√≠do que permite rastrear mudan√ßas no c√≥digo, colaborar com equipes e gerenciar projetos de maneira eficiente. Ele armazena um hist√≥rico completo das altera√ß√µes, facilitando o controle e recupera√ß√£o de vers√µes anteriores do c√≥digo.  

## Diferen√ßa entre GitHub e GitLab:

1. **Git:** 
   - √â um sistema de controle de vers√µes distribu√≠do que permite que m√∫ltiplas pessoas trabalhem em um projeto simultaneamente, rastreando altera√ß√µes no c√≥digo ao longo do tempo. Git √© uma ferramenta que pode ser usada localmente em um computador ou em servidores.

2. **GitHub:**
   - √â uma plataforma de hospedagem de c√≥digo-fonte que utiliza o Git como sistema de controle de vers√µes. Oferece uma interface web, integra√ß√£o com diversas ferramentas, funcionalidades sociais como pull requests, e suporte a colabora√ß√£o em projetos. GitHub √© amplamente utilizado na comunidade de desenvolvimento de software e √© conhecido por seus recursos de c√≥digo aberto.

3. **GitLab:**
   - Tamb√©m √© uma plataforma de hospedagem de c√≥digo-fonte que utiliza o Git. Al√©m das funcionalidades semelhantes ao GitHub, o GitLab oferece uma integra√ß√£o mais profunda com ferramentas de DevOps, como CI/CD (Integra√ß√£o Cont√≠nua e Entrega Cont√≠nua), gest√£o de projetos e monitoramento. GitLab pode ser instalado em servidores pr√≥prios, oferecendo mais controle sobre a infraestrutura.

## Observa√ß√£o:
Git e GitHub n√£o s√£o a mesma coisa. Git √© a tecnologia de controle de vers√µes, enquanto GitHub e GitLab s√£o plataformas que facilitam o uso do Git, oferecendo recursos adicionais para colabora√ß√£o e gerenciamento de projetos.

## üöÄ Como iniciar com Git e GitLab em projetos pessoais  

### 1Ô∏è‚É£ Instalando o Git  
Baixe e instale pelo site oficial:  
üîó [https://git-scm.com/](https://git-scm.com/)  

Ap√≥s instalar, verifique se a instala√ß√£o foi conclu√≠da corretamente:  
```bash
git --version
```

## 2Ô∏è‚É£ Criando uma conta no GitLab

1. Acesse üîó [https://gitlab.com/](https://gitlab.com/).
2. Clique em **Sign up**.
3. Escolha entre se cadastrar com Google, GitHub ou com um e-mail e senha.
4. Confirme sua conta pelo e-mail e fa√ßa login.
5. Ap√≥s o login, v√° at√© a aba **Reposit√≥rios** e clique em **Create a new project**.

## 3Ô∏è‚É£ Configurando o Git pela primeira vez

Ap√≥s instalar o Git, configure seu nome e e-mail:

```bash
# Configurando e-mail e nome 
git config --global user.name "Seu Nome"
git config --global user.email "seuemail@example.com"
git config --global --list

#Para excluir a configura√ß√£o global, use os seguintes comandos:
git config --global --unset user.name
git config --global --unset user.email
```

## 4Ô∏è‚É£ Criando um reposit√≥rio no GitLab

1. No GitLab, clique em **New Project** ‚Üí **Create blank project**.
2. Defina um nome para o reposit√≥rio (ex: meu-projeto).
3. Escolha a visibilidade do reposit√≥rio:
   - **P√∫blico:** Qualquer pessoa pode ver o projeto.
   - **Privado:** Apenas voc√™ e convidados podem acessar.
4. Clique em **Create repository**.

## 5Ô∏è‚É£ Conectando o reposit√≥rio local ao GitLab

üîπ **Criando um novo reposit√≥rio local e conectando ao GitLab**

```bash
# Criar uma pasta e entrar nela
mkdir meu-projeto && cd meu-projeto

# Inicializar o reposit√≥rio Git
git init  

# Criar um arquivo README.md
echo "# Meu Projeto" > README.md

# Adicionar e fazer o primeiro commit
git add .
git commit -m "Primeiro commit"

# Conectar ao reposit√≥rio remoto
git remote add origin https://gitlab.com/seu-usuario/meu-projeto.git

# Definir o branch principal como 'main'
git branch -M main

# Enviar o projeto para o GitLab
git push -u origin main
```

## 6Ô∏è‚É£ Clonando um reposit√≥rio GitLab

Se precisar baixar um reposit√≥rio existente para seu computador, use o seguinte comando:

```bash
git clone https://gitlab.com/seu-usuario/meu-projeto.git

## 7Ô∏è‚É£ Atualizando seu reposit√≥rio

Para obter as √∫ltimas mudan√ßas do reposit√≥rio remoto, use o seguinte comando:

```bash
git pull origin main
git add .
git commit -m "Adicionando novas funcionalidades"
git push origin main
```